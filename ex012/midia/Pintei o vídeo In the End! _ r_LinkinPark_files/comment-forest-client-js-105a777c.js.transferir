import{u as t,_ as e,s as n,n as o,e as i,c as s,k as r,dF as a,x as l,t as d,S as c,dG as h,d as p,ao as m,a0 as u,f as g,g as b,dH as f,L as v,aY as w,aZ as y,l as x,a9 as k}from"./shell-44808257.js";import{e as S,n as P}from"./ref-a51be9a2.js";import{o as C}from"./shreddit-comment-2a4702a7.js";import{t as E}from"./throttle-fdd58783.js";import"./icon-admin-06625271.js";import"./icon-link-post-c99ce083.js";import"./icon-user-ac700459.js";import{t as $}from"./comments-bc69596a.js";import"./shreddit-spoiler-56b168c9.js";import"./faceplate-render-f7cc94ff.js";import"./shreddit-comment-badges-16e1e3be.js";import"./mod-notes-opener-1222a767.js";import"./icon-overflow-horizontal-dd72a403.js";import"./comment-composer-host-619933e5.js";import"./rte-toolbar-button-emote-8e4faded.js";import"./mention-node-59bd1573.js";import"./icon-delete-outline-47a04294.js";import"./icon-edit-outline-51d07a12.js";import"./upload-to-s3-4fbd0891.js";import"./faceplate-tooltip-cd26ff33.js";import"./composer-7ff0681f.js";import"./faceplate-progress-5b44287d.js";import"./telemetry-event-struct-895ecb8c.js";import"./common-ui-strings-26f9bcdb.js";import"./icon-admin-fill-1e08facb.js";import"./icon-lock-fill-9f1c82ca.js";import"./icon-pin-fill-22743f0a.js";import"./mod-notes-5d8f45dd.js";import"./icon-spoiler-outline-46925753.js";const j=t(n);let D=class extends j{constructor(){super(...arguments),this.commentId="",this.parentCommentPermalink="",this.postPermalink="",this.isShredtopPDP=!1}static get styles(){return[s,r(".single-comment-thread-toolbar {\n  align-items: center;\n  display: flex;\n  flex-flow: row nowrap;\n  font: var(--font-title-h6);\n  justify-content: space-between;\n  padding: 0.5rem 1rem;\n}\n")]}firstUpdated(){this.updateComplete.then((()=>{const t=this.getBoundingClientRect().top;window.scrollTo({top:t-48,behavior:"auto"})}))}handleSeeFullDiscussionLink(){const t=document.querySelector("shreddit-post");t&&this.trackEvent(a(t))}render(){if(!this.commentId)return;const t="Discussão com um comentário",e="no-underline hover:no-underline visited:no-underline "+(this.isShredtopPDP?"text-primary":"text-global-alienblue");return l`\n <div>\n <div \n class="single-comment-thread-toolbar ${this.isShredtopPDP?"text-neutral-content-weak":"text-tone-3"}" \n>\n ${this.parentCommentPermalink?l` <a href="${this.parentCommentPermalink}" class="${e}"> ${t} </a> `:l` <span>${t}</span> `}\n ${this.isShredtopPDP?l`<span class="flex-1 h-px mx-xs bg-tone-4" data-id="line"></span>`:""}\n <a \n href="${this.postPermalink}" \n class="${e}" \n @click="${this.handleSeeFullDiscussionLink}" \n>\n Ver discuss\u00E3o completa\n </a>\n </div>\n </div>\n `}};e([o({type:String,attribute:"comment-id"})],D.prototype,"commentId",void 0),e([o({type:String,attribute:"parent-comment-permalink"})],D.prototype,"parentCommentPermalink",void 0),e([o({type:String,attribute:"post-permalink"})],D.prototype,"postPermalink",void 0),e([o({type:Boolean,attribute:"is-shredtop-pdp"})],D.prototype,"isShredtopPDP",void 0),D=e([i("shreddit-comments-page-tools")],D);const M=t(n);let A=class extends M{constructor(){super(...arguments),this.thingId="",this.subredditPrefixedName="",this.isTruncated=!1,this.isStaggered=!1,this.numStaggers=0,this.totalComments=0,this.isProfilePost=!1,this.isReportingEnabled=!1,this.isShredtopPDP=!1,this.ui="mobile",this.permalink="",this.author="",this.isAuthorDeleted=!1,this.staggerReveals=0,this.overflowActionsMenuRef=S(),this.scrollBlocker=new c(this),this._maxVisibleDepth=null,this.handleCloseOverflowActionsMenu=()=>{this.overflowActionsMenuRef.value?.close(),document.documentElement.removeEventListener("click",this.handleCloseOverflowActionsMenu),this.scrollBlocker.unblockPageScrolling()}}static get styles(){return[s,r(":host {\n  display: block;\n  background-color: var(--shreddit-content-background);\n  padding-bottom: var(--spacer-xs);\n}\n.content {\n  position: relative;\n}\n.content.noOverflow {\n  overflow: hidden;\n}\n.content.truncated slot[name='truncated'] {\n  display: none;\n}\n.shadow {\n  background: linear-gradient(180deg, hsla(0, 0%, 100%, 0) 0%, var(--color-tone-7));\n  bottom: 0;\n  content: '';\n  left: 0;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n  height: 100px;\n}\n.expand-button {\n  background-color: var(--color-global-orangered);\n  border: none;\n  border-radius: 18px;\n  color: var(--color-tone-7);\n  display: block;\n  font-weight: 700;\n  height: 36px;\n  overflow: hidden;\n  padding: 0 12px;\n  text-align: center;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: calc(100% - 32px);\n  margin: 0 16px 8px;\n}\n"),r(h)]}get maxVisibleDepth(){return null===this._maxVisibleDepth&&(this._maxVisibleDepth=this.getMaxVisibleDepth()),this._maxVisibleDepth}set maxVisibleDepth(t){this._maxVisibleDepth=t}getMaxVisibleDepth({containerWidth:t}={}){t??(t=this.getBoundingClientRect().width);const e="mobile"===this.ui?232:320,n="mobile"===this.ui?18:32,o="mobile"===this.ui?4:10,i=Math.floor((t-e)/n);return Math.max(1,Math.min(i,o))}connectedCallback(){super.connectedCallback(),this.addEventListener(C,this.handleOpenOverflowActionsMenu),this.resizeObserver=new ResizeObserver(E((t=>{let e=0;for(const n of t){const t=n.contentBoxSize.at(0)?.inlineSize;if(t){e=t;break}}if(0===e)return;const n=this.getMaxVisibleDepth({containerWidth:e});if(this.maxVisibleDepth!==n){this.maxVisibleDepth=n;for(const t of this.querySelectorAll("shreddit-comment"))t.setVisibility(n)}}),128,!0)),this.resizeObserver.observe(this,{box:"content-box"})}disconnectedCallback(){super.disconnectedCallback(),this.removeEventListener(C,this.handleOpenOverflowActionsMenu),this.resizeObserver?.unobserve(this),this.resizeObserver?.disconnect()}showAllComments(){this.isTruncated=!1,this.trackEvent($())}showMoreComments(){this.staggerReveals+=1,this.trackEvent($())}renderShredtopViewMoreCommentsButton(t){return p({attributes:{type:"button",className:"ml-sm xs:ml-0 font-semibold mt-md",onclick:t},appearance:"brand",shape:"pill",leadingIcon:m({size:u.Medium}),size:g.Small,children:"Ver mais comentários"})}renderTruncatedExpandButton(){return this.isShredtopPDP?this.renderShredtopViewMoreCommentsButton(this.showAllComments):l`\n <button class="expand-button" @click="${this.showAllComments}">\n \n Ver\n <faceplate-number number="${this.totalComments}" pretty=""></faceplate-number> outros coment\u00E1rios\n \n </button>\n `}renderStaggeredExpandButton(){return this.staggerReveals<this.numStaggers?this.isShredtopPDP?this.renderShredtopViewMoreCommentsButton(this.showMoreComments):l`\n <button class="expand-button" @click="${this.showMoreComments}">\n Ver mais coment\u00E1rios\n </button>\n `:l``}renderContent(){if(this.isStaggered){const t=[l`<slot name="staggered_1"></slot>`,l`<slot name="staggered_2"></slot>`,l`<slot name="staggered_3"></slot>`],e=this.staggerReveals>=this.numStaggers?t:t.slice(0,this.staggerReveals);return l`<div \n class="${b({content:!0,truncated:this.staggerReveals<this.numStaggers})}" \n>\n <slot></slot>\n ${e}\n </div>`}return l`\n <div \n class="${b({content:!0,truncated:this.isTruncated,noOverflow:!this.isShredtopPDP})}" \n>\n <slot></slot>\n ${this.isTruncated&&!this.isShredtopPDP?l`<div class="shadow"></div>`:l`<slot name="truncated"></slot>`}\n </div>\n `}renderExpandButton(){return this.isTruncated?this.isStaggered?this.renderStaggeredExpandButton():this.renderTruncatedExpandButton():""}render(){return l`\n ${this.renderContent()}\n <faceplate-dialog \n ${P(this.overflowActionsMenuRef)}\n class="overflow-actions-dialog" \n @click="${this.handleCloseOverflowActionsMenu}" \n>\n <faceplate-screen-reader-content id="overflow-actions-menu-label">\n Mais a\u00E7\u00F5es de coment\u00E1rio\n </faceplate-screen-reader-content>\n <ul class="overflow-actions-menu" aria-labelledby="overflow-actions-menu-label">\n <li>\n <a href="${this.permalink}">\n <icon-link-post aria-hidden="true" class="overflow-actions-icon"></icon-link-post>\n Compartilhar\n </a>\n </li>\n ${this.isProfilePost?"":l`\n <li>\n <a href="/${this.subredditPrefixedName}/">\n <icon-admin aria-hidden="true" class="overflow-actions-icon"></icon-admin>\n Mais do ${this.subredditPrefixedName}\n </a>\n </li>\n `}\n ${this.isAuthorDeleted?"":l`<li>\n <a href="/user/${this.author}/">\n <icon-user aria-hidden="true" class="overflow-actions-icon"></icon-user> Perfil de ${this.author}\n </a>\n </li>`}\n ${this.isReportingEnabled?l`<li>\n <shreddit-overflow-report \n thingId="${this.thingId}" \n type="${f.COMMENT}" \n></shreddit-overflow-report>\n </li>`:""}\n <button \n class="button button-small button-plain block bg-tone-6 text-tone-3 mt-[10px] mx-auto mb-0 w-[calc(100%-20px)] max-w-full" \n>\n Fechar\n </button>\n </ul>\n </faceplate-dialog>\n ${this.renderExpandButton()}\n `}handleOpenOverflowActionsMenu({detail:{author:t,isAuthorDeleted:e,permalink:n,thingId:o}}){this.author=t,this.isAuthorDeleted=e,this.permalink=n,this.thingId=o,this.overflowActionsMenuRef.value?.showModal(),document.documentElement.addEventListener("click",this.handleCloseOverflowActionsMenu),this.scrollBlocker.blockPageScrolling()}};e([o({type:String})],A.prototype,"thingId",void 0),e([o({type:String,attribute:"subreddit-prefixed-name"})],A.prototype,"subredditPrefixedName",void 0),e([o({type:Boolean})],A.prototype,"isTruncated",void 0),e([o({type:Boolean})],A.prototype,"isStaggered",void 0),e([o({type:Number})],A.prototype,"numStaggers",void 0),e([o({type:Number})],A.prototype,"totalComments",void 0),e([o({type:Boolean})],A.prototype,"isProfilePost",void 0),e([o({type:Boolean,attribute:"is-reporting-enabled"})],A.prototype,"isReportingEnabled",void 0),e([o({type:Boolean,attribute:"is-shredtop-pdp"})],A.prototype,"isShredtopPDP",void 0),e([o({type:String,attribute:"ui"})],A.prototype,"ui",void 0),e([d()],A.prototype,"permalink",void 0),e([d()],A.prototype,"author",void 0),e([d()],A.prototype,"isAuthorDeleted",void 0),e([d()],A.prototype,"staggerReveals",void 0),A=e([i("shreddit-comment-tree")],A);let B=class extends n{constructor(){super(...arguments),this.target="",this.path="",this.partial=null,this.handleSortEvent=async t=>{const e=t.detail.selected;this.updateLocation({sort:e});const n=new URL(`${location.origin}${this.path}`);n.searchParams.set("sort",e.toLowerCase()),n.searchParams.set("inline-refresh","true");const o=n.toString().substring(location.origin.length),i=document.createElement("faceplate-partial");i.setAttribute("loading",v.Programmatic),i.setAttribute("src",o),i.setAttribute("class","block min-h-screen xs:min-h-[20rem]");const s=document.createElement("shreddit-loading");i.appendChild(s);const r=this.partial??document.getElementById(this.target),a=`${r.getBoundingClientRect().height}px`;i.style.minHeight=a,r.insertAdjacentElement("beforebegin",i),r.remove(),this.partial=i;try{const t=new Promise(((t,e)=>{const n=t=>{this.partial!==i&&(t.stopImmediatePropagation(),t.stopPropagation()),e()};i.addEventListener("faceplate-error",n,{once:!0}),i.addEventListener("faceplate-alert",n,{once:!0})}));await Promise.race([t,i.load()]),this.partial=null;document.getElementById(this.target).style.minHeight=a,w(this,{message:"Comentários ordenados com sucesso",options:{priority:y.assertive}})}catch{if(this.partial!==i)return;this.dispatchEvent(x("faceplate-alert",{level:k.error,message:"Erro ao carregar os comentários."}))}}}updateLocation({sort:t}){const e=new URL(location.href);e.searchParams.set("sort",t.toLowerCase()),history.replaceState({},"",e.toString())}connectedCallback(){super.connectedCallback(),this.querySelector("shreddit-sort-dropdown")?.addEventListener("comment-sort",this.handleSortEvent)}disconnectedCallback(){super.disconnectedCallback(),this.querySelector("shreddit-sort-dropdown")?.removeEventListener("comment-sort",this.handleSortEvent)}render(){return l`<slot></slot>`}};e([o({type:String})],B.prototype,"target",void 0),e([o({type:String})],B.prototype,"path",void 0),B=e([i("shreddit-comments-sort-dropdown")],B);
//# sourceMappingURL=comment-forest-client-js-105a777c.js.map
